// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Presentation.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Core.Entities.History", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("People")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("UserId");

                    b.ToTable("History");
                });

            modelBuilder.Entity("Core.Entities.Hotel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quality")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Hotel");
                });

            modelBuilder.Entity("Core.Entities.HotelPicture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PictureId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("PictureId");

                    b.ToTable("HotelPicture");
                });

            modelBuilder.Entity("Core.Entities.Occupation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("HotelId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("RoomId");

                    b.ToTable("Occupation");
                });

            modelBuilder.Entity("Core.Entities.Picture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Bytes")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedById")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Picture");
                });

            modelBuilder.Entity("Core.Entities.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("UserId");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("Core.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("HotelId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("TypeId");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("Core.Entities.RoomPrice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomPrice");
                });

            modelBuilder.Entity("Core.Entities.RoomType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DefaultPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("People")
                        .HasColumnType("int");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RoomType");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d254745f-af67-4a42-8b3a-a676a1990f23"),
                            DefaultPrice = 100m,
                            People = 1,
                            Stars = 1
                        },
                        new
                        {
                            Id = new Guid("f805858a-e5b6-44db-8eed-28214c5cc097"),
                            DefaultPrice = 100m,
                            People = 2,
                            Stars = 1
                        },
                        new
                        {
                            Id = new Guid("6042f260-5aee-4ec8-9500-11badece9236"),
                            DefaultPrice = 140m,
                            People = 3,
                            Stars = 1
                        },
                        new
                        {
                            Id = new Guid("72ae754e-fa14-4a5b-9361-d8107f239082"),
                            DefaultPrice = 175m,
                            People = 4,
                            Stars = 1
                        },
                        new
                        {
                            Id = new Guid("3ad827e5-198a-40b7-811f-1ce64d3c8ebf"),
                            DefaultPrice = 250m,
                            People = 5,
                            Stars = 1
                        },
                        new
                        {
                            Id = new Guid("abb39912-da95-4a90-8c4f-5fb006ead2a1"),
                            DefaultPrice = 300m,
                            People = 6,
                            Stars = 1
                        },
                        new
                        {
                            Id = new Guid("d134793c-f031-42e1-a013-00aec8883df9"),
                            DefaultPrice = 200m,
                            People = 1,
                            Stars = 2
                        },
                        new
                        {
                            Id = new Guid("b89c7fdb-64c4-4e33-91fa-f5c7e6fa5834"),
                            DefaultPrice = 200m,
                            People = 2,
                            Stars = 2
                        },
                        new
                        {
                            Id = new Guid("a7a39eb9-2857-49f5-a682-42ac8c2c4292"),
                            DefaultPrice = 240m,
                            People = 3,
                            Stars = 2
                        },
                        new
                        {
                            Id = new Guid("da389746-ff89-40dc-9201-88004508c3c5"),
                            DefaultPrice = 275m,
                            People = 4,
                            Stars = 2
                        },
                        new
                        {
                            Id = new Guid("041d0961-3007-46f4-8413-56f25fef7b37"),
                            DefaultPrice = 350m,
                            People = 5,
                            Stars = 2
                        },
                        new
                        {
                            Id = new Guid("e81b7d40-f52a-4f92-b4df-3ef19f39f6d7"),
                            DefaultPrice = 400m,
                            People = 6,
                            Stars = 2
                        },
                        new
                        {
                            Id = new Guid("a6c5fd97-9da3-4b8b-9a22-deebfd9cdcc1"),
                            DefaultPrice = 300m,
                            People = 1,
                            Stars = 3
                        },
                        new
                        {
                            Id = new Guid("b374f9cc-c678-4766-93f4-5564d49a1c09"),
                            DefaultPrice = 300m,
                            People = 2,
                            Stars = 3
                        },
                        new
                        {
                            Id = new Guid("b799635f-b1e7-44dd-a2d3-447adb86b19d"),
                            DefaultPrice = 340m,
                            People = 3,
                            Stars = 3
                        },
                        new
                        {
                            Id = new Guid("96ebf603-bf3a-498b-8d22-61239e1be33e"),
                            DefaultPrice = 375m,
                            People = 4,
                            Stars = 3
                        },
                        new
                        {
                            Id = new Guid("30cd9926-edd8-4542-a8c1-e065b07dcb0a"),
                            DefaultPrice = 450m,
                            People = 5,
                            Stars = 3
                        },
                        new
                        {
                            Id = new Guid("3c243dd1-a0e7-431f-b4fb-9ac5ea5b61bb"),
                            DefaultPrice = 500m,
                            People = 6,
                            Stars = 3
                        },
                        new
                        {
                            Id = new Guid("9bb72415-62d6-4fc6-8ea7-b75c4bdd2f16"),
                            DefaultPrice = 400m,
                            People = 1,
                            Stars = 4
                        },
                        new
                        {
                            Id = new Guid("10c1eecc-c70d-4503-b958-07bab7526f2c"),
                            DefaultPrice = 400m,
                            People = 2,
                            Stars = 4
                        },
                        new
                        {
                            Id = new Guid("7d5eb0b9-8100-46dc-a622-d2d2fc650188"),
                            DefaultPrice = 440m,
                            People = 3,
                            Stars = 4
                        },
                        new
                        {
                            Id = new Guid("b4693c09-8512-47e6-96d9-e27a476fd351"),
                            DefaultPrice = 475m,
                            People = 4,
                            Stars = 4
                        },
                        new
                        {
                            Id = new Guid("79ae0a49-0cb2-4786-85c7-b91fe5adb786"),
                            DefaultPrice = 550m,
                            People = 5,
                            Stars = 4
                        },
                        new
                        {
                            Id = new Guid("bf5bb3cf-beb8-4dc6-848d-88c84d8765af"),
                            DefaultPrice = 600m,
                            People = 6,
                            Stars = 4
                        },
                        new
                        {
                            Id = new Guid("20491b51-d345-4bf8-95d3-cad141927df1"),
                            DefaultPrice = 500m,
                            People = 1,
                            Stars = 5
                        },
                        new
                        {
                            Id = new Guid("f92c7814-5a71-4f79-86b6-214fa1a45ad3"),
                            DefaultPrice = 500m,
                            People = 2,
                            Stars = 5
                        },
                        new
                        {
                            Id = new Guid("c09480d3-60ba-45c5-9ed9-263210ef4038"),
                            DefaultPrice = 540m,
                            People = 3,
                            Stars = 5
                        },
                        new
                        {
                            Id = new Guid("bbdeeb89-c879-40e0-81c6-c9c6559ef5e9"),
                            DefaultPrice = 575m,
                            People = 4,
                            Stars = 5
                        },
                        new
                        {
                            Id = new Guid("4733b2d2-26aa-450d-a2e5-92aa6af1fba9"),
                            DefaultPrice = 650m,
                            People = 5,
                            Stars = 5
                        },
                        new
                        {
                            Id = new Guid("4db81cc8-5aec-4a5a-82f3-bfdf48c5cbe8"),
                            DefaultPrice = 700m,
                            People = 6,
                            Stars = 5
                        });
                });

            modelBuilder.Entity("Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("PictureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PictureId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Core.Entities.UserPicture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PictureId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PictureId");

                    b.ToTable("UserPicture");
                });

            modelBuilder.Entity("Core.Entities.History", b =>
                {
                    b.HasOne("Core.Entities.Hotel", "Hotel")
                        .WithMany("History")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.User", "User")
                        .WithMany("History")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Core.Entities.Hotel", b =>
                {
                    b.HasOne("Core.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Core.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Core.Entities.HotelPicture", b =>
                {
                    b.HasOne("Core.Entities.Hotel", "Hotel")
                        .WithMany("Pictures")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Picture", "Picture")
                        .WithMany()
                        .HasForeignKey("PictureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("Picture");
                });

            modelBuilder.Entity("Core.Entities.Occupation", b =>
                {
                    b.HasOne("Core.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Core.Entities.Hotel", null)
                        .WithMany("Occupations")
                        .HasForeignKey("HotelId");

                    b.HasOne("Core.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("Core.Entities.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Core.Entities.Picture", b =>
                {
                    b.HasOne("Core.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Core.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Core.Entities.Review", b =>
                {
                    b.HasOne("Core.Entities.Hotel", "Hotel")
                        .WithMany("Reviews")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Core.Entities.Room", b =>
                {
                    b.HasOne("Core.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Core.Entities.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("Core.Entities.RoomType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("Hotel");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Core.Entities.RoomPrice", b =>
                {
                    b.HasOne("Core.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Core.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("Core.Entities.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Core.Entities.User", b =>
                {
                    b.HasOne("Core.Entities.UserPicture", "Picture")
                        .WithMany()
                        .HasForeignKey("PictureId");

                    b.Navigation("Picture");
                });

            modelBuilder.Entity("Core.Entities.UserPicture", b =>
                {
                    b.HasOne("Core.Entities.Picture", "Picture")
                        .WithMany()
                        .HasForeignKey("PictureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Picture");
                });

            modelBuilder.Entity("Core.Entities.Hotel", b =>
                {
                    b.Navigation("History");

                    b.Navigation("Occupations");

                    b.Navigation("Pictures");

                    b.Navigation("Reviews");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Core.Entities.User", b =>
                {
                    b.Navigation("History");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
